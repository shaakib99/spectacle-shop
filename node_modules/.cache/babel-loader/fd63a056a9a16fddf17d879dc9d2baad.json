{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/wahid/Desktop/spectacle-shop-master/src/pages/Information.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../css/Information/Information.css';\nimport Informationinput from '../components/Information/Informationinput';\nimport Delivery from '../components/Information/Delivery';\nimport Errors from '../components/Information/Errors';\nimport { useHistory } from 'react-router-dom';\nimport { gsap } from 'gsap';\nimport { SSL_COMRZ } from '../api';\nimport { connect } from 'react-redux';\nimport { SAVE_DATA, DELETE_DATA } from '../redux/actions/CartAction';\nimport { fetchData, dataVerified, findTotalAmount } from '../utils/Helper';\n\nconst Information = props => {\n  _s();\n\n  const history = useHistory();\n  const [selectedDelivery, setSelectedDelivery] = React.useState(0);\n  const [errors, setErrors] = React.useState([]);\n  const fields = [{\n    title: 'Name*',\n    type: 'text',\n    errorMsg: 'Name and address filed can not be empty'\n  }, {\n    title: 'Email*',\n    type: 'email',\n    errorMsg: 'Email field required and must be valid'\n  }, {\n    title: 'Phone*',\n    type: 'number',\n    errorMsg: 'Phone field required and must be valid with 11 digits'\n  }, {\n    title: 'Address*',\n    type: 'textarea',\n    errorMsg: 'Name and address filed can not be empty'\n  }];\n  const deliveryFiled = [{\n    name: 'Cash on delivery',\n    onClick: () => {},\n    title: 'cash'\n  }, {\n    name: 'Online Payment (Only sandbox)',\n    onClick: () => {},\n    title: 'ssl'\n  }];\n\n  const deliveryClickHandler = index => {\n    const all = document.getElementsByClassName('inputs');\n\n    for (var i = 0; i < all.length; i++) all[i].checked = false;\n\n    all[index].checked = true;\n    setSelectedDelivery(index);\n  };\n\n  const onSuccessData = data => {\n    props.deleteData();\n    window.location.href = data.GatewayPageURL;\n  };\n\n  const onErrorData = data => console.log(data);\n\n  const onOrderButtonClick = e => {\n    const allOk = dataVerified(fields, setErrors);\n\n    if (allOk && deliveryFiled[selectedDelivery].title === 'cash') {\n      props.deleteData();\n      gsap.to(e.target, {\n        scale: 0,\n        duration: 0.2,\n        ease: 'expo.out',\n        onComplete: () => history.push('/spectacle-shop/order-complete/done')\n      });\n    } else if (allOk && deliveryFiled[selectedDelivery].title === 'ssl') {\n      const data = {\n        total: findTotalAmount(props.cartData)\n      };\n      fetchData(SSL_COMRZ, onSuccessData, onErrorData, 'POST', JSON.stringify(data));\n    }\n  };\n\n  React.useEffect(() => {\n    (function (window, document) {\n      var loader = function () {\n        var script = document.createElement(\"script\"),\n            tag = document.getElementsByTagName(\"script\")[0];\n        script.src = \"https://sandbox.sslcommerz.com/embed.min.js?\" + Math.random().toString(36).substring(7);\n        tag.parentNode.insertBefore(script, tag);\n      };\n\n      window.addEventListener ? window.addEventListener(\"load\", loader, false) : window.attachEvent(\"onload\", loader);\n    })(window, document);\n  }, []);\n  React.useEffect(() => {\n    if (props.cartData.length === 0) history.replace('/browse');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"information-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"information-title\",\n      children: \"Your Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Errors, {\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), fields.map((f, index) => /*#__PURE__*/_jsxDEV(Informationinput, {\n      data: f\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this)), deliveryFiled.map((d, index) => /*#__PURE__*/_jsxDEV(Delivery, {\n      data: d,\n      checked: index === selectedDelivery ? true : false,\n      onClick: () => deliveryClickHandler(index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"information-order-button\",\n      onClick: onOrderButtonClick,\n      children: [\"Order(\", '$' + findTotalAmount(props.cartData), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Information, \"UEXg2szJ4k6cL86+j2EGqC4sfKA=\", false, function () {\n  return [useHistory];\n});\n\n_c = Information;\n\nconst mapStateToProps = state => {\n  return {\n    cartData: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveData: data => dispatch({\n      type: SAVE_DATA,\n      data: data\n    }),\n    deleteData: () => dispatch({\n      type: DELETE_DATA\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Information);\n\nvar _c;\n\n$RefreshReg$(_c, \"Information\");","map":{"version":3,"sources":["/Users/wahid/Desktop/spectacle-shop-master/src/pages/Information.js"],"names":["React","Informationinput","Delivery","Errors","useHistory","gsap","SSL_COMRZ","connect","SAVE_DATA","DELETE_DATA","fetchData","dataVerified","findTotalAmount","Information","props","history","selectedDelivery","setSelectedDelivery","useState","errors","setErrors","fields","title","type","errorMsg","deliveryFiled","name","onClick","deliveryClickHandler","index","all","document","getElementsByClassName","i","length","checked","onSuccessData","data","deleteData","window","location","href","GatewayPageURL","onErrorData","console","log","onOrderButtonClick","e","allOk","to","target","scale","duration","ease","onComplete","push","total","cartData","JSON","stringify","useEffect","loader","script","createElement","tag","getElementsByTagName","src","Math","random","toString","substring","parentNode","insertBefore","addEventListener","attachEvent","replace","map","f","d","mapStateToProps","state","mapDispatchToProps","dispatch","saveData"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../css/Information/Information.css'\nimport Informationinput from '../components/Information/Informationinput'\nimport Delivery from '../components/Information/Delivery'\nimport Errors from '../components/Information/Errors'\nimport {useHistory} from 'react-router-dom'\nimport {gsap} from 'gsap'\nimport {SSL_COMRZ} from '../api'\nimport {connect} from 'react-redux'\nimport {SAVE_DATA, DELETE_DATA} from '../redux/actions/CartAction'\nimport {fetchData, dataVerified, findTotalAmount} from '../utils/Helper'\nconst Information = (props) => {\n    const history = useHistory()\n    const [selectedDelivery, setSelectedDelivery] = React.useState(0)\n    const [errors, setErrors] = React.useState([])\n    const fields = [\n        { title:'Name*', type: 'text', errorMsg: 'Name and address filed can not be empty' },\n        { title:'Email*', type: 'email', errorMsg: 'Email field required and must be valid' },\n        { title:'Phone*', type: 'number', errorMsg: 'Phone field required and must be valid with 11 digits' },\n        { title:'Address*', type: 'textarea', errorMsg: 'Name and address filed can not be empty'},\n    ]\n    const deliveryFiled = [\n        { name: 'Cash on delivery', onClick: ()=>{}, title:'cash'},\n        {name: 'Online Payment (Only sandbox)', onClick: ()=>{},title:'ssl'}\n    ]\n    const deliveryClickHandler = (index)=> {\n       const all = document.getElementsByClassName('inputs')\n       for(var i=0;i < all.length;i++)\n           all[i].checked = false\n       all[index].checked = true\n       setSelectedDelivery(index)\n    }\n    const onSuccessData = (data)=> {\n        props.deleteData()\n        window.location.href = data.GatewayPageURL\n    }\n    const onErrorData = (data) => console.log(data)\n    const onOrderButtonClick = (e)=>{\n        const allOk = dataVerified(fields, setErrors)\n        if(allOk && deliveryFiled[selectedDelivery].title === 'cash'){\n            props.deleteData()\n            gsap.to(e.target, {scale:0, duration: 0.2, ease:'expo.out', onComplete:()=> history.push('/spectacle-shop/order-complete/done')})\n        }else if(allOk && deliveryFiled[selectedDelivery].title === 'ssl'){\n            const data = {total: findTotalAmount(props.cartData)}\n            fetchData(SSL_COMRZ,onSuccessData,onErrorData,'POST', JSON.stringify(data))\n        }\n    }\n    React.useEffect(()=>{\n        (function (window, document) {\n            var loader = function () {\n                var script = document.createElement(\"script\"), tag = document.getElementsByTagName(\"script\")[0];\n                script.src = \"https://sandbox.sslcommerz.com/embed.min.js?\" + Math.random().toString(36).substring(7);\n                tag.parentNode.insertBefore(script, tag);\n            };\n        \n            window.addEventListener ? window.addEventListener(\"load\", loader, false) : window.attachEvent(\"onload\", loader);\n        })(window, document);\n    },[])\n    React.useEffect(()=>{\n        if(props.cartData.length === 0)\n            history.replace('/browse')\n    },[])\n    return (\n        <div id='information-container'>\n            <p id='information-title'>Your Information</p>\n            <Errors errors = {errors}/>\n            {fields.map((f,index)=>(\n                <Informationinput data = {f} key={index}/>\n            ))}\n            {deliveryFiled.map((d,index)=>(\n                <Delivery key = {index} data = {d} checked = {index === selectedDelivery ? true : false} onClick={()=>deliveryClickHandler(index)}/>\n            ))}\n            <button id='information-order-button' onClick={onOrderButtonClick}>Order({'$'+findTotalAmount(props.cartData)})</button>\n        </div>\n    )\n}\nconst mapStateToProps = (state)=>{\n    return {\n        cartData : state\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        saveData : (data)=> dispatch({type:SAVE_DATA,data: data }),\n        deleteData : ()=> dispatch({type:DELETE_DATA })\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps) (Information)"]},"metadata":{},"sourceType":"module"}