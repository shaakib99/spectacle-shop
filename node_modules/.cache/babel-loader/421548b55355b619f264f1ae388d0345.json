{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/wahid/Desktop/spectacle-shop-master/src/pages/Ordercomplete.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../css/ordercomplete/Ordercomplete.css';\nimport orderCompleteLogo from \"../assets/images/order-complete.svg\";\nimport { gsap } from 'gsap';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { DELETE_DATA } from '../redux/actions/CartAction';\nimport { GET_TRAN_DETAIL } from '../api';\nimport Loader from '../components/Loader';\nimport { fetchData } from '../utils/Helper';\n\nconst Ordercomplete = props => {\n  _s();\n\n  const {\n    tranid\n  } = useParams();\n  const history = useHistory();\n  const imageref = /*#__PURE__*/React.createRef();\n  const [isLoading, setLoading] = React.useState(true);\n  const [paymentDone, setPaymentDone] = React.useState(false);\n  const [msg, setMsg] = React.useState('');\n  const allMessages = {\n    validMessage: '',\n    processingMessage: 'Your payment status is processing...',\n    invalidMessage: 'Invalid Payment ID',\n    failedMessage: 'Your payment status- FAILED',\n    couldNotCompleteRequest: 'Could not complete request'\n  };\n\n  const handleOnClick = e => {\n    gsap.to(e.target, {\n      scale: 0,\n      duration: 0.2,\n      ease: 'expo.out',\n      onComplete: () => history.push('/spectacle-shop/browse')\n    });\n  };\n\n  const setState = (message, paymentStatus, loadingStatus) => {\n    setMsg(message);\n    setPaymentDone(paymentStatus);\n    setLoading(false);\n  };\n\n  const onSuccess = data => {\n    if (data.APIConnect === 'DONE') {\n      if (data.no_of_trans_found > 0) {\n        const status = data.element[data.no_of_trans_found - 1].status;\n\n        if (status === \"VALIDATED\" || status === \"VALID\") {\n          setState(allMessages.validMessage, true);\n          props.deleteData();\n        } else if (status === \"PROCESSING\" || status === \"PENDING\") {\n          setState(allMessages.processingMessage, false);\n        } else {\n          setState(allMessages.failedMessage, false);\n        }\n      } else {\n        setState(allMessages.invalidMessage, false);\n      }\n    } else {\n      setState(allMessages.couldNotCompleteRequest, false);\n    }\n  };\n\n  const onError = data => console.log(data);\n\n  React.useEffect(() => {\n    setPaymentDone(false);\n    setLoading(true);\n\n    if (tranid !== 'done') {\n      const url = GET_TRAN_DETAIL + tranid;\n      fetchData(url, onSuccess, onError, 'GET', null);\n    } else {\n      props.deleteData();\n      setState(allMessages.validMessage, true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"order-complete-container\",\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 26\n    }, this) : null, !isLoading && !paymentDone ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 44\n    }, this) : null, !isLoading && paymentDone ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"order-complete-main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: orderCompleteLogo,\n        alt: 'order-complete',\n        ref: imageref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Thank you for your order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOnClick,\n        children: \"Browse other\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Ordercomplete, \"mLFIWe6emfrVua1z88pKdNZVMQY=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Ordercomplete;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteData: () => dispatch({\n      type: DELETE_DATA\n    })\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Ordercomplete);\n\nvar _c;\n\n$RefreshReg$(_c, \"Ordercomplete\");","map":{"version":3,"sources":["/Users/wahid/Desktop/spectacle-shop-master/src/pages/Ordercomplete.js"],"names":["React","gsap","useHistory","useParams","connect","DELETE_DATA","GET_TRAN_DETAIL","Loader","fetchData","Ordercomplete","props","tranid","history","imageref","createRef","isLoading","setLoading","useState","paymentDone","setPaymentDone","msg","setMsg","allMessages","validMessage","processingMessage","invalidMessage","failedMessage","couldNotCompleteRequest","handleOnClick","e","to","target","scale","duration","ease","onComplete","push","setState","message","paymentStatus","loadingStatus","onSuccess","data","APIConnect","no_of_trans_found","status","element","deleteData","onError","console","log","useEffect","url","orderCompleteLogo","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../css/ordercomplete/Ordercomplete.css'\nimport orderCompleteLogo from '../assets/images/order-complete.svg'\nimport {gsap} from 'gsap'\nimport {useHistory, useParams} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {DELETE_DATA} from '../redux/actions/CartAction'\nimport {GET_TRAN_DETAIL} from '../api'\nimport Loader from '../components/Loader'\nimport {fetchData} from '../utils/Helper'\n\nconst Ordercomplete = (props)=>{\n    const { tranid } = useParams()\n    const history = useHistory()\n    const imageref = React.createRef()\n    const [isLoading, setLoading] = React.useState(true)\n    const [paymentDone, setPaymentDone] = React.useState(false)\n    const [msg, setMsg] = React.useState('')\n    const allMessages = {\n        validMessage: '',\n        processingMessage: 'Your payment status is processing...',\n        invalidMessage: 'Invalid Payment ID',\n        failedMessage: 'Your payment status- FAILED',\n        couldNotCompleteRequest: 'Could not complete request',\n    }\n    const handleOnClick = (e)=>{\n        gsap.to(e.target,{scale:0, duration:0.2, ease:'expo.out', onComplete:()=>history.push('/spectacle-shop/browse')})\n    }\n    const setState =(message, paymentStatus, loadingStatus) => {\n        setMsg(message)\n        setPaymentDone(paymentStatus)\n        setLoading(false)\n    }\n    const onSuccess = (data) => {\n        if(data.APIConnect === 'DONE'){\n            if(data.no_of_trans_found > 0){\n                const status = data.element[data.no_of_trans_found - 1].status\n                if(status === \"VALIDATED\" || status === \"VALID\" )\n                {\n                    setState(allMessages.validMessage,true)\n                    props.deleteData()\n                }else if(status === \"PROCESSING\" || status === \"PENDING\"){\n                    setState(allMessages.processingMessage,false)\n                }else{\n                    setState(allMessages.failedMessage, false )\n                }\n            }else{\n                setState(allMessages.invalidMessage, false )\n            }\n        }\n        else{\n            setState(allMessages.couldNotCompleteRequest, false)\n        }\n    }\n    const onError = (data) => console.log(data)\n    React.useEffect(()=>{\n        setPaymentDone(false)\n        setLoading(true)\n        if(tranid !== 'done'){\n            const url = GET_TRAN_DETAIL + tranid\n            fetchData(url,onSuccess,onError,'GET',null)\n        }else{\n            props.deleteData()\n            setState(allMessages.validMessage, true)\n        }\n    },[])\n    return (\n        <div id='order-complete-container'>\n            {isLoading ? <Loader />: null}\n            {!isLoading && !paymentDone ? (<p>{msg}</p>) : null}\n            {!isLoading && paymentDone ? (\n                <div id='order-complete-main-container'>\n                <img src={orderCompleteLogo} alt={'order-complete'} ref={imageref}/>\n                <p>Thank you for your order</p>\n                <button onClick={handleOnClick}>Browse other</button>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        deleteData : ()=> dispatch({type: DELETE_DATA}),\n    }\n}\nexport default connect(null,mapDispatchToProps) (Ordercomplete)"]},"metadata":{},"sourceType":"module"}